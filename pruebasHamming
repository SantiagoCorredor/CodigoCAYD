# ANEXO 2: CODIFICACION HAMMING(11,7) PYTHON 
# Nombre: David Enrique Gantiva Cifuentes.
# Universidad: Escuela Colombiana de ingenieria Julio Garavito.
# Descripcion: Codificador Hamming 7 a 11. con detector y corrector de errores
# Version: 1.0
# Fecha: 30/10/2022 11:39 p.m.

import tkinter
import customtkinter
import random

customtkinter.set_appearance_mode("dark")  # Modes: "System" (standard), "Dark", "Light"
customtkinter.set_default_color_theme("blue")  # Themes: "blue" (standard), "green", "dark-blue"

app = customtkinter.CTk()
app.geometry("350x630")
app.title("Codificador Hamming(11,7)")

def button_callback():
  Hmg = [None, None, None, None, None, None, None, None, None, None, None]
  Hmgn = ''
  flag2, p0, p1, p2, p3 = 0, None, None, None, None
  P0 = [7,6,4,3,1]
  P1 = [7,5,4,2,1]
  P2 = [6,5,4]
  P3 = [3,2,1]
  
  def paridad(Pn):  #devuelve el bit de paridad, se ingresan las posiciones que controla Pn
    cont = 0
    p = 2
    for n in range(0,len(Pn)):
      if((ms[Pn[n]-1])=='1'):
        cont = cont + 1
    if((cont%2)!=0):
      p = 1
    else:
      p = 0
    return p
   
  ms = entry_1.get()
  flag1 = len(ms)
  if (flag1!=7): #valida que sean 7 elementos
    error_1 = customtkinter.CTkLabel(master=frame_1, text="La longitud es distinta de 7!, intentelo de nuevo.                            ", font=("Roboto Medium", -9) ,justify=tkinter.LEFT)
    error_1.place(x=15, y=92)
  else:
    error_1 = customtkinter.CTkLabel(master=frame_1, text="", font=("Roboto Medium", -9) ,justify=tkinter.LEFT)
    error_1.place(x=15, y=92)
    for n in range(0,7):    #valida que sean solo 1's o 0's.
      if ((ms[n]=='0') or (ms[n]=='1')):
        flag2 = flag2 + 1
      else:
        flag2 = 0

    if (flag2 != 7):
      error_1 = customtkinter.CTkLabel(master=frame_1, text="El mensaje no esta escrito en binario, escriba solo 1's o 0's", font=("Roboto Medium", -9) ,justify=tkinter.LEFT)
      error_1.place(x=15, y=92)  
      
    else:
      error_1 = customtkinter.CTkLabel(master=frame_1, text="                                                                                                                            ", font=("Roboto Medium", -9) ,justify=tkinter.LEFT)
      error_1.place(x=15, y=92)
      p0 = paridad(P0)
      p1 = paridad(P1)
      p2 = paridad(P2)
      p3 = paridad(P3)
      Hmg[0]=int(ms[0])
      Hmg[1]=int(ms[1])
      Hmg[2]=int(ms[2])
      Hmg[3]=p3
      Hmg[4]=int(ms[3])
      Hmg[5]=int(ms[4])
      Hmg[6]=int(ms[5])
      Hmg[7]=p2
      Hmg[8]=int(ms[6])
      Hmg[9]=p1
      Hmg[10]=p0
      Hmgn = ms[0]+ ms[1]+ ms[2]+str(p3)+ms[3]+ms[4]+ms[5]+str(p2)+ms[6]+str(p1)+str(p0)   
      entry_2.delete(0, 11)
      entry_2.insert(0, Hmgn)

def button_gen_error():
  ms = entry_2.get()
  flag1 = len(ms)
  flag6 = 0
  if (flag1!=11): #valida que sean 11 elementos
    error_2 = customtkinter.CTkLabel(master=frame_1, text="La longitud es distinta de 11!, intentelo de nuevo.                            ", font=("Roboto Medium", -9) ,justify=tkinter.LEFT)
    error_2.place(x=15, y=224)
  else:
    error_2 = customtkinter.CTkLabel(master=frame_1, text="", font=("Roboto Medium", -9) ,justify=tkinter.LEFT)
    error_2.place(x=15, y=224)
    for n in range(0,len(ms)):    #valida que sean solo 1's o 0's.
      if ((ms[n]=='0') or (ms[n]=='1')):
        flag6 = flag6 + 1
      else:
        flag6 = 0

    if (flag6 != 11):
      error_2 = customtkinter.CTkLabel(master=frame_1, text="El mensaje no esta escrito en binario, escriba solo 1's o 0's", font=("Roboto Medium", -9) ,justify=tkinter.LEFT)
      error_2.place(x=15, y=224)  
      
    else:
      error_2 = customtkinter.CTkLabel(master=frame_1, text="                                                                                                                            ", font=("Roboto Medium", -9) ,justify=tkinter.LEFT)
      error_2.place(x=15, y=224)

      poserror = random.randint(0, 10)
      listams = list(ms)
      poserror = random.randint(0, 10)
         
      if (listams[poserror]=='1'):
        listams[poserror]='0'
      else:
        listams[poserror]='1'
        
      new_str = ''.join(listams)
      entry_3.delete(0, 11)
      entry_3.insert(0, new_str)
      label_4 = customtkinter.CTkLabel(master=frame_1, text="Error generado en la posicion: "+str(11-poserror)+"                                                            ", font=("Roboto Medium", -10) ,justify=tkinter.LEFT)
      label_4.place(x=15, y=224)
           
def corrector():
    ms = entry_3.get()
    flag1 = len(ms)
    flag2 = 0
    if (flag1!=11): #valida que sean 11 elementos
        error_3 = customtkinter.CTkLabel(master=frame_1, text="La longitud es distinta de 11!, intentelo de nuevo.                            ", font=("Roboto Medium", -9) ,justify=tkinter.LEFT)
        error_3.place(x=15, y=362)
    else:
        error_3 = customtkinter.CTkLabel(master=frame_1, text="", font=("Roboto Medium", -9) ,justify=tkinter.LEFT)
        error_3.place(x=15, y=362)
        for n in range(0,11):    #valida que sean solo 1's o 0's.
        if ((ms[n]=='0') or (ms[n]=='1')):
            flag2 = flag2 + 1
        else:
            flag2 = 0

        if (flag2 != 11):
        error_3 = customtkinter.CTkLabel(master=frame_1, text="El mensaje no esta escrito en binario, escriba solo 1's o 0's", font=("Roboto Medium", -9) ,justify=tkinter.LEFT)
        error_3.place(x=15, y=362)  
        
        else:
        error_3 = customtkinter.CTkLabel(master=frame_1, text="                                                                                                                            ", font=("Roboto Medium", -9) ,justify=tkinter.LEFT)
        error_3.place(x=15, y=362)
        listms = list(ms)
        list2 = []
        for n in range(0,len(listms)):
            list2.append(int(listms[n]))
        
        p0 = list2[10]^list2[8]^list2[6]^list2[4]^list2[2]^list2[0]
        p1 = list2[9]^list2[8]^list2[5]^list2[4]^list2[1]^list2[0]
        p2 = list2[7]^list2[6]^list2[5]^list2[4]
        p3 = list2[3]^list2[2]^list2[1]^list2[0]
        perrorstr = str(p3)+str(p2)+str(p1)+str(p0)
        numero_decimal = 0 
        for posicion, digito_string in enumerate(perrorstr[::-1]):
            numero_decimal += int(digito_string) * 2 ** posicion
    
        print("error en bin: ",perrorstr)
        print("El error esta en la posicion: ",numero_decimal," contando de L a R desde 1")
        
        if (list2[11-numero_decimal]==1):
            list2[11-numero_decimal] = 0
        else:
            list2[11-numero_decimal] = 1
        
        hmgc = str(list2[0])+str(list2[1])+str(list2[2])+str(list2[3])+str(list2[4])+str(list2[5])+str(list2[6])+str(list2[7])+str(list2[8])+str(list2[9])+str(list2[10])
        print("Haming corregido: ",hmgc)
        entry_4.delete(0, 11)
        entry_4.insert(0, hmgc)
        label_6 = customtkinter.CTkLabel(master=frame_1, text="Se detecto error en la posicion "+str(numero_decimal)+" y se corrigio      ", font=("Roboto Medium", -10) ,justify=tkinter.LEFT)
        label_6.place(x=15, y=501)
      
      
      
frame_1 = customtkinter.CTkFrame(master=app)
frame_1.pack(pady=20, padx=40, fill="both", expand=True)

label_1 = customtkinter.CTkLabel(master=frame_1, text="Codificador Hamming ( 11, 7 )", font=("Roboto Medium", -16) ,justify=tkinter.LEFT)
label_1.pack(pady=12, padx=10)

entry_1 = customtkinter.CTkEntry(master=frame_1, placeholder_text="binario de 7 bits")
entry_1.place(x=75, y=58)

error_1 = customtkinter.CTkLabel(master=frame_1, text="", font=("Roboto Medium", -9) ,justify=tkinter.LEFT)
error_1.place(x=55, y=92)

button_1 = customtkinter.CTkButton(master=frame_1, text="Codificar", font=("Roboto Medium", -16) , command=button_callback)
button_1.place(x=75, y=125)

label_2 = customtkinter.CTkLabel(master=frame_1, text="Mensaje codificado en Hamming:", font=("Roboto Medium", -12) ,justify=tkinter.LEFT)
label_2.place(x=55, y=157)

entry_2 = customtkinter.CTkEntry(master=frame_1, placeholder_text="Hamming de 11 bits")
entry_2.place(x=75, y=190)

error_2 = customtkinter.CTkLabel(master=frame_1, text="", font=("Roboto Medium", -9) ,justify=tkinter.LEFT)
error_2.place(x=35, y=224)

button_2 = customtkinter.CTkButton(master=frame_1, text="Generar Error", font=("Roboto Medium", -16) , command=button_gen_error)
button_2.place(x=75, y=260)

label_3 = customtkinter.CTkLabel(master=frame_1, text="Hamming con error:", font=("Roboto Medium", -12) ,justify=tkinter.LEFT)
label_3.place(x=55, y=292)

entry_3 = customtkinter.CTkEntry(master=frame_1, placeholder_text="Hamming con error")
entry_3.place(x=75, y=326)

error_3 = customtkinter.CTkLabel(master=frame_1, text="", font=("Roboto Medium", -9) ,justify=tkinter.LEFT)
error_3.place(x=35, y=373)

button_3 = customtkinter.CTkButton(master=frame_1, text="Corregir", font=("Roboto Medium", -16) , command=corrector)
button_3.place(x=75, y=403)

label_5 = customtkinter.CTkLabel(master=frame_1, text="Hamming corregido:", font=("Roboto Medium", -12) ,justify=tkinter.LEFT)
label_5.place(x=55, y=438)

entry_4 = customtkinter.CTkEntry(master=frame_1, placeholder_text="Hamming corregido")
entry_4.place(x=75, y=468)

label_6 = customtkinter.CTkLabel(master=frame_1, text="", font=("Roboto Medium", -12) ,justify=tkinter.LEFT)
label_6.place(x=10, y=501)



app.mainloop()
